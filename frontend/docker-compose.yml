version: "3.8"

services:
  # PostgreSQL database service
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: autofix_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: always
    ports:
      - 5432:5432 
    networks:
      - backend-network

  # Frontend services
  frontend1:
    image: bcanales/autofix-frontend:latest
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - frontend-network

  frontend2:
    image: bcanales/autofix-frontend:latest
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - frontend-network

  frontend3:
    image: bcanales/autofix-frontend:latest
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - frontend-network

  # Backend services
  backend1:
    image: bcanales/autofix-backend:latest
    networks:
      - backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - db

  backend2:
    image: bcanales/autofix-backend:latest
    networks:
      - backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - db

  backend3:
    image: bcanales/autofix-backend:latest
    networks:
      - backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - db

  # Nginx for frontend load balancing
  nginx-frontend:
    image: nginx:latest
    restart: always
    ports:
      - "8070:80"
    volumes:
      - ./deployment/nginx-frontend.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend1
      - frontend2
      - frontend3
    networks:
      - frontend-network

  # Nginx for backend load balancing
  nginx-backend:
    image: nginx:latest
    restart: always
    ports:
      - "8090:8090"
    volumes:
      - ./deployment/nginx-backend.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - backend-network

networks:
  frontend-network:
  backend-network:

volumes:
  db_data: